lors du traitement de la requête, le but est de minimiser le stockage générer par les différente opération

Pour cela,chaque Opération (selection, projection,...) possède un enfant (c'est le principe de l'arbre) (Sauf pour les feuilles)
Cet enfant qui est lui aussi une opération, possède une Table, l'idée est donc de récupérer la tables des deux enfants

On défini une Racine comme étant la liste de tout les pointeurs des information stocké en mémoire pour une colonne précise de la BDD, au cours du programme, celle-ci est immuable  
Par exemple, Racine ("Personne.age") contient les pointeurs vers tout les ages enregistré dans la table Personne de la BDD

On défini une Table comme étant une Liste de Colonne
Chaque Colone contient les index valide vers une case d'une racine
Chaque Colonne possède des cases d'une même racine

Lors du tout début du traitement d'une requête, on vient générer une Racine par colonne (de la bdd) utilisé
Par exemple si l'on a besoin des colonnes "Nom" et "Age", alors à l'execution, Le programme créera deux Racines une pour "Nom" et une pour "Age"
Ensuite, si les deux colonne sont utilisé au même moment, par exemple car on a une projection qui vérifie que la premiere lettre du Nom est "a" et l'age est supérieur à 17
Alors le programme vas créer une Table qui contiendras deux colonne, une pour l'age et une pour le nom.
Pendant la projection, pour chaque valeur information stocker dans une Colonne (qui est en fait la position dans la Racine du pointeur de l'information), on vérifie si l'information est valide, si elle ne l'est pas, alors on enlève la case de la Colonne,

Si jamais l'age est utilisé à deux endroit différent, alors il suffit uniquement de creer deux Colonnes qui pointerons vers la même Racine


Le but de cette représentation est qu'elle permet d'éviter les problèmes suivants : 
 - stocker dans la RAM toute les information d'une BDD (seuls des pointeurs sont utilisé)
 - permet d'augmenter la rapidité des jointure et des projection en supprimant au fur et à mesure toute les informations inutile